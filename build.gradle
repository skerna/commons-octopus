plugins {
    id 'kotlin-multiplatform'
    id 'kotlinx-serialization'
}

apply plugin: 'maven-publish'


repositories{
    mavenLocal()
    google()
    jcenter()
    mavenCentral()
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://kotlin.bintray.com/kotlin-dev" }
    maven { url "https://kotlin.bintray.com/js-externals" }
    maven { url "https://jitpack.io" }
}
kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js')
        // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
        // For Linux, preset should be changed to e.g. presets.linuxX64
        // For MacOS, preset should be changed to e.g. presets.macosX64
        //fromPreset(presets.linuxX64, 'linux')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlinCoroutinesVersion"
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$kotlinSerialization"
                api "io.ktor:ktor-client-core:$ktorClientVersion"
                api "com.gitlab.skerna.libs:commons-sreaction-metadata:$skernaVersion"
                api "com.gitlab.skerna.libs:commons-logger-metadata:$skernaVersion"

            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
            
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinSerialization"
                api "io.ktor:ktor-client-core-jvm:$ktorClientVersion"
                api "io.ktor:ktor-client-okhttp:$ktorClientVersion"
                api "com.gitlab.skerna.libs:commons-sreaction-jvm:$skernaVersion"
                api "com.gitlab.skerna.libs:commons-logger-jvm:$skernaVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
            }
        }
        jsMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$kotlinCoroutinesVersion"
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$kotlinSerialization"
                api "io.ktor:ktor-client-core-js:$ktorClientVersion"
                api "com.gitlab.skerna.libs:commons-sreaction-js:$skernaVersion"
                api "com.gitlab.skerna.libs:commons-logger-js:$skernaVersion"
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
    }
}

compileKotlinJs {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.sourceMapEmbedSources = 'always'
}
compileTestKotlinJs {
    kotlinOptions.metaInfo = true
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'umd'
    kotlinOptions.sourceMapEmbedSources = 'always'
}
