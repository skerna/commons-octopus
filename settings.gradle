pluginManagement {
    resolutionStrategy {

        eachPlugin {
            if (requested.id.id == "kotlin-multiplatform") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
            if (requested.id.id == "kotlinx-serialization") {
                useModule("org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion")
            }
            if (requested.id.id == "kotlin-platform-jvm") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
        }
    }
}

def isUncluded = gradle.parent != null
if(isUncluded) {
    includeBuild("../commons-logger"){
        dependencySubstitution {
            substitute module('com.gitlab.skerna.libs:commons-logger-metadata') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-logger-jvm') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-logger-js') with project(':')
        }
    }
    includeBuild("../commons-sreaction"){
        dependencySubstitution {
            substitute module('com.gitlab.skerna.libs:commons-sreaction-metadata') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-sreaction-jvm') with project(':')
            substitute module('com.gitlab.skerna.libs:commons-sreaction-js') with project(':')
        }
    }
}
